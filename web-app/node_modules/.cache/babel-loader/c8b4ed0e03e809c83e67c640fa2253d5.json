{"ast":null,"code":"import { API_SUCCESS, API_FAIL, GET_EVENTS, ADD_NEW_EVENT, // ADD_EVENT_SUCCESS,\n// ADD_EVENT_FAIL,\nUPDATE_EVENT_SUCCESS, UPDATE_EVENT_FAIL, DELETE_EVENT_SUCCESS, DELETE_EVENT_FAIL, GET_CATEGORIES_SUCCESS, GET_CATEGORIES_FAIL } from \"./actionTypes\";\nconst INIT_STATE = {\n  events: [],\n  categories: [],\n  error: {}\n};\n\nconst Calendar = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case API_SUCCESS:\n      switch (action.payload.actionType) {\n        case GET_EVENTS:\n          return { ...state,\n            events: action.payload.data\n          };\n\n        case ADD_NEW_EVENT:\n          return { ...state,\n            events: [...state.events, action.payload.data]\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case API_FAIL:\n      switch (action.payload.actionType) {\n        case GET_EVENTS:\n          return { ...state,\n            events: action.payload.error\n          };\n\n        case ADD_NEW_EVENT:\n          return { ...state,\n            events: action.payload.error\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case UPDATE_EVENT_SUCCESS:\n      return { ...state,\n        events: state.events.map(event => event.id.toString() === action.payload.id.toString() ? {\n          event,\n          ...action.payload\n        } : event)\n      };\n\n    case UPDATE_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case DELETE_EVENT_SUCCESS:\n      return { ...state,\n        events: state.events.filter(event => event.id.toString() !== action.payload.id.toString())\n      };\n\n    case DELETE_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_CATEGORIES_SUCCESS:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case GET_CATEGORIES_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/nawazdhandala/Documents/Projects/DCX/app/src/store/calendar/reducer.js"],"names":["API_SUCCESS","API_FAIL","GET_EVENTS","ADD_NEW_EVENT","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_FAIL","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","INIT_STATE","events","categories","error","Calendar","state","action","type","payload","actionType","data","map","event","id","toString","filter"],"mappings":"AAAA,SACEA,WADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,aAJF,EAKE;AACA;AACAC,oBAPF,EAQEC,iBARF,EASEC,oBATF,EAUEC,iBAVF,EAWEC,sBAXF,EAYEC,mBAZF,QAaO,eAbP;AAeA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAAnB;;AAMA,MAAMC,QAAQ,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBL,UAAuB;AAAA,MAAXM,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,WAAL;AACE,cAAQgB,MAAM,CAACE,OAAP,CAAeC,UAAvB;AACE,aAAKjB,UAAL;AACE,iBAAO,EACL,GAAGa,KADE;AAELJ,YAAAA,MAAM,EAAEK,MAAM,CAACE,OAAP,CAAeE;AAFlB,WAAP;;AAKF,aAAKjB,aAAL;AACE,iBAAO,EACL,GAAGY,KADE;AAELJ,YAAAA,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAV,EAAkBK,MAAM,CAACE,OAAP,CAAeE,IAAjC;AAFH,WAAP;;AAKF;AACE,iBAAO,EAAE,GAAGL;AAAL,WAAP;AAdJ;;AAgBF,SAAKd,QAAL;AACE,cAAQe,MAAM,CAACE,OAAP,CAAeC,UAAvB;AACE,aAAKjB,UAAL;AACE,iBAAO,EACL,GAAGa,KADE;AAELJ,YAAAA,MAAM,EAAEK,MAAM,CAACE,OAAP,CAAeL;AAFlB,WAAP;;AAKF,aAAKV,aAAL;AACE,iBAAO,EACL,GAAGY,KADE;AAELJ,YAAAA,MAAM,EAAEK,MAAM,CAACE,OAAP,CAAeL;AAFlB,WAAP;;AAKF;AACE,iBAAO,EAAE,GAAGE;AAAL,WAAP;AAdJ;;AAiBF,SAAKX,oBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAaU,GAAb,CAAiBC,KAAK,IAC5BA,KAAK,CAACC,EAAN,CAASC,QAAT,OAAwBR,MAAM,CAACE,OAAP,CAAeK,EAAf,CAAkBC,QAAlB,EAAxB,GACI;AAAEF,UAAAA,KAAF;AAAS,aAAGN,MAAM,CAACE;AAAnB,SADJ,GAEII,KAHE;AAFH,OAAP;;AASF,SAAKjB,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKZ,oBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAac,MAAb,CACNH,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,QAAT,OAAwBR,MAAM,CAACE,OAAP,CAAeK,EAAf,CAAkBC,QAAlB,EAD3B;AAFH,OAAP;;AAOF,SAAKjB,iBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKV,sBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAKF,SAAKT,mBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAIF;AACE,aAAOH,KAAP;AA9EJ;AAgFD,CAjFD;;KAAMD,Q;AAmFN,eAAeA,QAAf","sourcesContent":["import {\n  API_SUCCESS,\n  API_FAIL,\n  GET_EVENTS,\n  ADD_NEW_EVENT,\n  // ADD_EVENT_SUCCESS,\n  // ADD_EVENT_FAIL,\n  UPDATE_EVENT_SUCCESS,\n  UPDATE_EVENT_FAIL,\n  DELETE_EVENT_SUCCESS,\n  DELETE_EVENT_FAIL,\n  GET_CATEGORIES_SUCCESS,\n  GET_CATEGORIES_FAIL,\n} from \"./actionTypes\"\n\nconst INIT_STATE = {\n  events: [],\n  categories: [],\n  error: {},\n}\n\nconst Calendar = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case API_SUCCESS:\n      switch (action.payload.actionType) {\n        case GET_EVENTS:\n          return {\n            ...state,\n            events: action.payload.data,\n          };\n\n        case ADD_NEW_EVENT:\n          return {\n            ...state,\n            events: [...state.events, action.payload.data],\n          }\n\n        default:\n          return { ...state };\n      }\n    case API_FAIL:\n      switch (action.payload.actionType) {\n        case GET_EVENTS:\n          return {\n            ...state,\n            events: action.payload.error,\n          };\n\n        case ADD_NEW_EVENT:\n          return {\n            ...state,\n            events: action.payload.error,\n          };\n\n        default:\n          return { ...state };\n      }\n\n    case UPDATE_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: state.events.map(event =>\n          event.id.toString() === action.payload.id.toString()\n            ? { event, ...action.payload }\n            : event\n        ),\n      }\n\n    case UPDATE_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case DELETE_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: state.events.filter(\n          event => event.id.toString() !== action.payload.id.toString()\n        ),\n      }\n\n    case DELETE_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: action.payload,\n      }\n\n    case GET_CATEGORIES_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default Calendar\n"]},"metadata":{},"sourceType":"module"}