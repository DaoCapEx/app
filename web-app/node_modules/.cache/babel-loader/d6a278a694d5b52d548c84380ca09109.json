{"ast":null,"code":"var _jsxFileName = \"/Users/nawazdhandala/Documents/Projects/DCX/app/src/App.js\";\nimport PropTypes from 'prop-types';\nimport React from \"react\";\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // Import Routes all\n\nimport { userRoutes } from \"./routes/allRoutes\"; // Import all middleware\n\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\"; // layouts Format\n\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport HorizontalLayout from \"./components/HorizontalLayout/\"; // Import scss\n\nimport \"./assets/scss/theme.scss\";\nimport \"./assets/scss/preloader.scss\"; // Import Firebase Configuration file\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\"\n\nimport fakeBackend from \"./helpers/AuthType/fakeBackend\"; // Activating fake backend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfakeBackend(); // const firebaseConfig = {\n//   apiKey: process.env.REACT_APP_APIKEY,\n//   authDomain: process.env.REACT_APP_AUTHDOMAIN,\n//   databaseURL: process.env.REACT_APP_DATABASEURL,\n//   projectId: process.env.REACT_APP_PROJECTID,\n//   storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n//   messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n//   appId: process.env.REACT_APP_APPID,\n//   measurementId: process.env.REACT_APP_MEASUREMENTID,\n// }\n// init firebase backend\n// initFirebaseBackend(firebaseConfig)\n\nconst App = props => {\n  function getLayout() {\n    let layoutCls = VerticalLayout;\n\n    switch (props.layout.layoutType) {\n      case \"horizontal\":\n        layoutCls = HorizontalLayout;\n        break;\n\n      default:\n        layoutCls = VerticalLayout;\n        break;\n    }\n\n    return layoutCls;\n  }\n\n  const Layout = getLayout();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: userRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Authmiddleware, {\n          path: route.path,\n          layout: Layout,\n          component: route.component,\n          isAuthProtected: false,\n          exact: true\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nawazdhandala/Documents/Projects/DCX/app/src/App.js"],"names":["PropTypes","React","Switch","BrowserRouter","Router","connect","userRoutes","Authmiddleware","VerticalLayout","HorizontalLayout","fakeBackend","App","props","getLayout","layoutCls","layout","layoutType","Layout","map","route","idx","path","component"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,aAAa,IAAIC,MAAlC,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,oBAA3B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,oCAA3B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B,C,CAEA;;AACA,OAAO,0BAAP;AACA,OAAO,8BAAP,C,CAEA;AACA;;AAEA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAEA;;;AACAA,WAAW,G,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnB,WAASC,SAAT,GAAqB;AACnB,QAAIC,SAAS,GAAGN,cAAhB;;AACA,YAAQI,KAAK,CAACG,MAAN,CAAaC,UAArB;AACE,WAAK,YAAL;AACEF,QAAAA,SAAS,GAAGL,gBAAZ;AACA;;AACF;AACEK,QAAAA,SAAS,GAAGN,cAAZ;AACA;AANJ;;AAQA,WAAOM,SAAP;AACD;;AAED,QAAMG,MAAM,GAAGJ,SAAS,EAAxB;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,kBACGP,UAAU,CAACY,GAAX,CAAe,CAACC,KAAD,EAAQC,GAAR,kBACd,QAAC,cAAD;AACE,UAAA,IAAI,EAAED,KAAK,CAACE,IADd;AAEE,UAAA,MAAM,EAAEJ,MAFV;AAGE,UAAA,SAAS,EAAEE,KAAK,CAACG,SAHnB;AAKE,UAAA,eAAe,EAAE,KALnB;AAME,UAAA,KAAK;AANP,WAIOF,GAJP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAlCD;;KAAMT,G;AAqCN,eAAeA,GAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport React from \"react\"\n\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\n// Import Routes all\nimport { userRoutes } from \"./routes/allRoutes\"\n\n// Import all middleware\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\"\n\n// layouts Format\nimport VerticalLayout from \"./components/VerticalLayout/\"\nimport HorizontalLayout from \"./components/HorizontalLayout/\"\n\n// Import scss\nimport \"./assets/scss/theme.scss\"\nimport \"./assets/scss/preloader.scss\"\n\n// Import Firebase Configuration file\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\"\n\nimport fakeBackend from \"./helpers/AuthType/fakeBackend\";\n\n// Activating fake backend\nfakeBackend()\n\n// const firebaseConfig = {\n//   apiKey: process.env.REACT_APP_APIKEY,\n//   authDomain: process.env.REACT_APP_AUTHDOMAIN,\n//   databaseURL: process.env.REACT_APP_DATABASEURL,\n//   projectId: process.env.REACT_APP_PROJECTID,\n//   storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n//   messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n//   appId: process.env.REACT_APP_APPID,\n//   measurementId: process.env.REACT_APP_MEASUREMENTID,\n// }\n\n// init firebase backend\n// initFirebaseBackend(firebaseConfig)\n\nconst App = props => {\n\n  function getLayout() {\n    let layoutCls = VerticalLayout\n    switch (props.layout.layoutType) {\n      case \"horizontal\":\n        layoutCls = HorizontalLayout\n        break\n      default:\n        layoutCls = VerticalLayout\n        break\n    }\n    return layoutCls\n  }\n\n  const Layout = getLayout()\n  return (\n    <React.Fragment>\n      <Router>\n        <Switch>\n          {userRoutes.map((route, idx) => (\n            <Authmiddleware\n              path={route.path}\n              layout={Layout}\n              component={route.component}\n              key={idx}\n              isAuthProtected={false}\n              exact\n            />\n          ))}\n        </Switch>\n      </Router>\n    </React.Fragment>\n  )\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}