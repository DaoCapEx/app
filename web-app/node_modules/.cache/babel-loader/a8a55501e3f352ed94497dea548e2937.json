{"ast":null,"code":"var _jsxFileName = \"/Users/nawazdhandala/Documents/Projects/DCX/app/src/routes/middleware/Authmiddleware.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authmiddleware = _ref => {\n  let {\n    component: Component,\n    layout: Layout,\n    isAuthProtected,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuthProtected && !localStorage.getItem(\"authUser\")) {\n        return (\n          /*#__PURE__*/\n          // <Redirect\n          //   to={{ pathname: \"/login\", state: { from: props.location } }}\n          // />\n          _jsxDEV(_Fragment, {}, void 0, false)\n        );\n      }\n\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Authmiddleware;\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any\n};\nexport default Authmiddleware;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authmiddleware\");","map":{"version":3,"sources":["/Users/nawazdhandala/Documents/Projects/DCX/app/src/routes/middleware/Authmiddleware.js"],"names":["React","PropTypes","Route","Authmiddleware","component","Component","layout","Layout","isAuthProtected","rest","props","localStorage","getItem","propTypes","bool","any","location","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;;AAEA,MAAMC,cAAc,GAAG;AAAA,MAAC;AACtBC,IAAAA,SAAS,EAAEC,SADW;AAEtBC,IAAAA,MAAM,EAAEC,MAFc;AAGtBC,IAAAA,eAHsB;AAItB,OAAGC;AAJmB,GAAD;AAAA,sBAMrB,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IAAI;AACf,UAAIF,eAAe,IAAI,CAACG,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAxB,EAA0D;AACxD;AAAA;AACE;AACA;AACA;AACA;AAJF;AAMD;;AAED,0BACE,QAAC,MAAD;AAAA,+BACE,QAAC,SAAD,OAAeF;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AAjBH;AAAA;AAAA;AAAA;AAAA,UANqB;AAAA,CAAvB;;KAAMP,c;AA2BNA,cAAc,CAACU,SAAf,GAA2B;AACzBL,EAAAA,eAAe,EAAEP,SAAS,CAACa,IADF;AAEzBV,EAAAA,SAAS,EAAEH,SAAS,CAACc,GAFI;AAGzBC,EAAAA,QAAQ,EAAEf,SAAS,CAACgB,MAHK;AAIzBX,EAAAA,MAAM,EAAEL,SAAS,CAACc;AAJO,CAA3B;AAOA,eAAeZ,cAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Route } from \"react-router-dom\"\n\nconst Authmiddleware = ({\n  component: Component,\n  layout: Layout,\n  isAuthProtected,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (isAuthProtected && !localStorage.getItem(\"authUser\")) {\n        return (\n          // <Redirect\n          //   to={{ pathname: \"/login\", state: { from: props.location } }}\n          // />\n          <></>\n        )\n      }\n\n      return (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )\n    }}\n  />\n)\n\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any,\n}\n\nexport default Authmiddleware;\n"]},"metadata":{},"sourceType":"module"}