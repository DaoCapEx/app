{"ast":null,"code":"var _jsxFileName = \"/Users/nawazdhandala/Documents/Projects/DCX/app/src/routes/middleware/Authmiddleware.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Authmiddleware = _ref => {\n  let {\n    component: Component,\n    layout: Layout,\n    isAuthProtected,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(NavLink, { ...rest,\n    render: props => {\n      // if (isAuthProtected && !localStorage.getItem(\"authUser\")) {\n      //   return (\n      //     // <Redirect\n      //     //   to={{ pathname: \"/login\", state: { from: props.location } }}\n      //     // />\n      //     <></>\n      //   )\n      // }\n      return /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Authmiddleware;\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any\n};\nexport default Authmiddleware;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authmiddleware\");","map":{"version":3,"sources":["/Users/nawazdhandala/Documents/Projects/DCX/app/src/routes/middleware/Authmiddleware.js"],"names":["React","PropTypes","NavLink","Authmiddleware","component","Component","layout","Layout","isAuthProtected","rest","props","propTypes","bool","any","location","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAuB,kBAAvB;;;AAEA,MAAMC,cAAc,GAAG;AAAA,MAAC;AACtBC,IAAAA,SAAS,EAAEC,SADW;AAEtBC,IAAAA,MAAM,EAAEC,MAFc;AAGtBC,IAAAA,eAHsB;AAItB,OAAGC;AAJmB,GAAD;AAAA,sBAMrB,QAAC,OAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,0BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AAjBH;AAAA;AAAA;AAAA;AAAA,UANqB;AAAA,CAAvB;;KAAMP,c;AA2BNA,cAAc,CAACQ,SAAf,GAA2B;AACzBH,EAAAA,eAAe,EAAEP,SAAS,CAACW,IADF;AAEzBR,EAAAA,SAAS,EAAEH,SAAS,CAACY,GAFI;AAGzBC,EAAAA,QAAQ,EAAEb,SAAS,CAACc,MAHK;AAIzBT,EAAAA,MAAM,EAAEL,SAAS,CAACY;AAJO,CAA3B;AAOA,eAAeV,cAAf","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { NavLink} from \"react-router-dom\";\n\nconst Authmiddleware = ({\n  component: Component,\n  layout: Layout,\n  isAuthProtected,\n  ...rest\n}) => (\n  <NavLink\n    {...rest}\n    render={props => {\n      // if (isAuthProtected && !localStorage.getItem(\"authUser\")) {\n      //   return (\n      //     // <Redirect\n      //     //   to={{ pathname: \"/login\", state: { from: props.location } }}\n      //     // />\n      //     <></>\n      //   )\n      // }\n\n      return (\n        <Layout>\n          {/* <Component {...props} /> */}\n        </Layout>\n      )\n    }}\n  />\n)\n\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any,\n}\n\nexport default Authmiddleware;\n"]},"metadata":{},"sourceType":"module"}