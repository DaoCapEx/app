{"ast":null,"code":"var _jsxFileName = \"/Users/nawazdhandala/Documents/Projects/DCX/app/src/components/CommonForBoth/RightSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { changeLayout, changeLayoutWidth, changeLayoutPosition, changeTopbarTheme, changeSidebarType, changeSidebarTheme } from \"../../store/actions\"; //constants\n\nimport { layoutTypes, layoutTheme, layoutWidthTypes, layoutPositions, topBarThemeTypes, leftSidebarTypes, leftSideBarThemeTypes } from \"../../constants/layout\"; //SimpleBar\n\nimport SimpleBar from \"simplebar-react\";\nimport { Link } from \"react-router-dom\"; //redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RightSidebar = _ref => {\n  _s();\n\n  let {\n    onClose,\n    onChangeLayoutMode\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    layoutType,\n    layoutMode,\n    layoutWidth,\n    layoutPosition,\n    topbarTheme,\n    leftSideBarType,\n    leftSideBarTheme\n  } = useSelector(state => ({\n    layoutType: state.Layout.layoutType,\n    layoutMode: state.Layout.layoutMode,\n    layoutWidth: state.Layout.layoutWidth,\n    layoutPosition: state.Layout.layoutPosition,\n    topbarTheme: state.Layout.topbarTheme,\n    leftSideBarType: state.Layout.leftSideBarType,\n    leftSideBarTheme: state.Layout.leftSideBarTheme\n  })); // Light/dark mode\n\n  const onChangeMode = value => {\n    if (onChangeLayoutMode) {\n      onChangeLayoutMode(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-bar\",\n      children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n        style: {\n          height: \"900px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-simplebar\": true,\n          className: \"h-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rightbar-title d-flex align-items-center bg-dark p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"m-0 me-2 text-white\",\n              children: \"Theme Customizer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              onClick: onClose,\n              className: \"right-bar-toggle ms-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-close noti-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"m-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"mb-3\",\n              children: \"Layouts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"radioVertical\",\n                name: \"layout\",\n                value: layoutTypes.VERTICAL,\n                className: \"form-check-input\",\n                checked: layoutType === layoutTypes.VERTICAL,\n                onChange: e => {\n                  if (e.target.checked) {\n                    dispatch(changeLayout(e.target.value));\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"radioVertical\",\n                className: \"form-check-label\",\n                children: \"Vertical\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), \"   \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input\",\n                type: \"radio\",\n                name: \"layout\",\n                id: \"layout-horizontal\",\n                value: layoutTypes.HORIZONTAL,\n                checked: layoutType === layoutTypes.HORIZONTAL,\n                onChange: e => {\n                  if (e.target.checked) {\n                    dispatch(changeLayout(e.target.value));\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"layout-horizontal\",\n                children: \"Horizontal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"mt-4 mb-3 pt-2\",\n              children: \"Layout Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"radioThemeLight\",\n                name: \"radioTheme\",\n                value: layoutTheme.LIGHTMODE,\n                className: \"form-check-input\",\n                checked: layoutMode === layoutTheme.LIGHTMODE,\n                onChange: e => {\n                  onChangeMode(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"radioThemeLight\",\n                children: \"Light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), \"   \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"radioThemeDark\",\n                name: \"radioTheme\",\n                value: layoutTheme.DARKMODE,\n                className: \"form-check-input\",\n                checked: layoutMode === layoutTheme.DARKMODE,\n                onChange: e => {\n                  onChangeMode(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"radioThemeDark\",\n                children: \"Dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"mt-4 mb-3\",\n              children: \"Layout Width\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"radioFluid\",\n                name: \"radioWidth\",\n                value: layoutWidthTypes.FLUID,\n                className: \"form-check-input\",\n                checked: layoutWidth === layoutWidthTypes.FLUID,\n                onChange: e => {\n                  if (e.target.checked) {\n                    dispatch(changeLayoutWidth(e.target.value));\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"radioFluid\",\n                className: \"form-check-label\",\n                children: \"Fluid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), \"   \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"radioBoxed\",\n                name: \"radioWidth\",\n                value: layoutWidthTypes.BOXED,\n                className: \"form-check-input\",\n                checked: layoutWidth === layoutWidthTypes.BOXED,\n                onChange: e => {\n                  if (e.target.checked) {\n                    dispatch(changeLayoutWidth(e.target.value));\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"radioBoxed\",\n                className: \"form-check-label\",\n                children: \"Boxed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"mt-4 mb-3\",\n              children: \"Layout Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"layout-position-fixed\",\n                name: \"layout-position\",\n                value: layoutPositions.SCROLLABLE_FALSE,\n                className: \"form-check-input\",\n                checked: layoutPosition === layoutPositions.SCROLLABLE_FALSE,\n                onChange: e => {\n                  if (e.target.checked) {\n                    dispatch(changeLayoutPosition(e.target.value));\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"layout-position-fixed\",\n                children: \"Fixed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"layout-position-scrollable\",\n                name: \"layout-position\",\n                value: layoutPositions.SCROLLABLE_TRUE,\n                className: \"form-check-input\",\n                checked: layoutPosition === layoutPositions.SCROLLABLE_TRUE,\n                onChange: e => {\n                  if (e.target.checked) {\n                    dispatch(changeLayoutPosition(e.target.value));\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"layout-position-scrollable\",\n                children: \"Scrollable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"mt-4 mb-3\",\n              children: \"Topbar Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"topbar-color-light\",\n                name: \"topbar-color\",\n                value: topBarThemeTypes.LIGHT,\n                className: \"form-check-input\",\n                checked: topbarTheme === topBarThemeTypes.LIGHT,\n                onChange: e => {\n                  if (e.target.checked) {\n                    dispatch(changeTopbarTheme(e.target.value));\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"topbar-color-light\",\n                children: \"Light\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-check form-check-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: \"topbar-color-dark\",\n                name: \"topbar-color\",\n                value: topBarThemeTypes.DARK,\n                className: \"form-check-input\",\n                checked: topbarTheme === topBarThemeTypes.DARK,\n                onChange: e => {\n                  if (e.target.checked) {\n                    dispatch(changeTopbarTheme(e.target.value));\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"topbar-color-dark\",\n                children: \"Dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), layoutType === \"vertical\" ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mt-4 mb-3 sidebar-setting\",\n                children: \"Sidebar Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check sidebar-setting\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"radio\",\n                  name: \"sidebar-size\",\n                  id: \"sidebar-size-default\",\n                  value: leftSidebarTypes.DEFAULT,\n                  checked: leftSideBarType === leftSidebarTypes.DEFAULT,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      dispatch(changeSidebarType(e.target.value));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"sidebar-size-default\",\n                  children: \"Default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check sidebar-setting\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"radio\",\n                  name: \"sidebar-size\",\n                  id: \"sidebar-size-compact\",\n                  value: leftSidebarTypes.COMPACT,\n                  checked: leftSideBarType === leftSidebarTypes.COMPACT,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      dispatch(changeSidebarType(e.target.value));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"sidebar-size-compact\",\n                  children: \"Compact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check sidebar-setting\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"radio\",\n                  name: \"sidebar-size\",\n                  id: \"sidebar-size-small\",\n                  value: leftSidebarTypes.ICON,\n                  checked: leftSideBarType === leftSidebarTypes.ICON,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      dispatch(changeSidebarType(e.target.value));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"sidebar-size-small\",\n                  children: \"Small (Icon View)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mt-4 mb-3 sidebar-setting\",\n                children: \"Sidebar Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check sidebar-setting\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"radio\",\n                  name: \"sidebar-color\",\n                  id: \"sidebar-color-light\",\n                  value: leftSideBarThemeTypes.LIGHT,\n                  checked: leftSideBarTheme === leftSideBarThemeTypes.LIGHT,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      dispatch(changeSidebarTheme(e.target.value));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"sidebar-color-light\",\n                  children: \"Light\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check sidebar-setting\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"radio\",\n                  name: \"sidebar-color\",\n                  id: \"sidebar-color-dark\",\n                  value: leftSideBarThemeTypes.DARK,\n                  checked: leftSideBarTheme === leftSideBarThemeTypes.DARK,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      dispatch(changeSidebarTheme(e.target.value));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"sidebar-color-dark\",\n                  children: \"Dark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check sidebar-setting\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"radio\",\n                  name: \"sidebar-color\",\n                  id: \"sidebar-color-brand\",\n                  value: leftSideBarThemeTypes.COLORED,\n                  checked: leftSideBarTheme === leftSideBarThemeTypes.COLORED,\n                  onChange: e => {\n                    if (e.target.checked) {\n                      dispatch(changeSidebarTheme(e.target.value));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"sidebar-color-brand\",\n                  children: \"Brand\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightbar-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RightSidebar, \"VfMYY7wvZ0qKGWYrT4XymevnbSE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RightSidebar;\nexport default RightSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"RightSidebar\");","map":{"version":3,"sources":["/Users/nawazdhandala/Documents/Projects/DCX/app/src/components/CommonForBoth/RightSidebar.js"],"names":["React","changeLayout","changeLayoutWidth","changeLayoutPosition","changeTopbarTheme","changeSidebarType","changeSidebarTheme","layoutTypes","layoutTheme","layoutWidthTypes","layoutPositions","topBarThemeTypes","leftSidebarTypes","leftSideBarThemeTypes","SimpleBar","Link","useSelector","useDispatch","RightSidebar","onClose","onChangeLayoutMode","dispatch","layoutType","layoutMode","layoutWidth","layoutPosition","topbarTheme","leftSideBarType","leftSideBarTheme","state","Layout","onChangeMode","value","height","VERTICAL","e","target","checked","HORIZONTAL","LIGHTMODE","DARKMODE","FLUID","BOXED","SCROLLABLE_FALSE","SCROLLABLE_TRUE","LIGHT","DARK","DEFAULT","COMPACT","ICON","COLORED"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  changeLayout,\n  changeLayoutWidth,\n  changeLayoutPosition,\n  changeTopbarTheme,\n  changeSidebarType,\n  changeSidebarTheme,\n} from \"../../store/actions\";\n\n//constants\nimport {\n  layoutTypes,\n  layoutTheme,\n  layoutWidthTypes,\n  layoutPositions,\n  topBarThemeTypes,\n  leftSidebarTypes,\n  leftSideBarThemeTypes,\n} from \"../../constants/layout\";\n\n//SimpleBar\nimport SimpleBar from \"simplebar-react\";\n\nimport { Link } from \"react-router-dom\";\n\n//redux\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst RightSidebar = ({ onClose, onChangeLayoutMode }) => {\n  const dispatch = useDispatch();\n\n  const {\n    layoutType,\n    layoutMode,\n    layoutWidth,\n    layoutPosition,\n    topbarTheme,\n    leftSideBarType,\n    leftSideBarTheme,\n  } = useSelector((state) => ({\n    layoutType: state.Layout.layoutType,\n    layoutMode: state.Layout.layoutMode,\n    layoutWidth: state.Layout.layoutWidth,\n    layoutPosition: state.Layout.layoutPosition,\n    topbarTheme: state.Layout.topbarTheme,\n    leftSideBarType: state.Layout.leftSideBarType,\n    leftSideBarTheme: state.Layout.leftSideBarTheme,\n  }));\n\n  // Light/dark mode\n  const onChangeMode = (value) => {\n    if (onChangeLayoutMode) {\n      onChangeLayoutMode(value);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"right-bar\">\n        <SimpleBar style={{ height: \"900px\" }}>\n          <div data-simplebar className=\"h-100\">\n            <div className=\"rightbar-title d-flex align-items-center bg-dark p-3\">\n              <h5 className=\"m-0 me-2 text-white\">Theme Customizer</h5>\n              <Link\n                to=\"#\"\n                onClick={onClose}\n                className=\"right-bar-toggle ms-auto\"\n              >\n                <i className=\"mdi mdi-close noti-icon\"></i>\n              </Link>\n            </div>\n\n            <hr className=\"m-0\" />\n\n            <div className=\"p-4\">\n              <h6 className=\"mb-3\">Layouts</h6>\n              <div className=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"radioVertical\"\n                  name=\"layout\"\n                  value={layoutTypes.VERTICAL}\n                  className=\"form-check-input\"\n                  checked={layoutType === layoutTypes.VERTICAL}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      dispatch(changeLayout(e.target.value));\n                    }\n                  }}\n                />\n                <label htmlFor=\"radioVertical\" className=\"form-check-label\">\n                  Vertical\n                </label>\n              </div>\n              {\"   \"}\n              <div className=\"form-check form-check-inline\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"radio\"\n                  name=\"layout\"\n                  id=\"layout-horizontal\"\n                  value={layoutTypes.HORIZONTAL}\n                  checked={layoutType === layoutTypes.HORIZONTAL}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      dispatch(changeLayout(e.target.value));\n                    }\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"layout-horizontal\">\n                  Horizontal\n                </label>\n              </div>\n              <h6 className=\"mt-4 mb-3 pt-2\">Layout Mode</h6>\n              <div className=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"radioThemeLight\"\n                  name=\"radioTheme\"\n                  value={layoutTheme.LIGHTMODE}\n                  className=\"form-check-input\"\n                  checked={layoutMode === layoutTheme.LIGHTMODE}\n                  onChange={e => {\n                    onChangeMode(e.target.value);\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"radioThemeLight\">\n                  Light\n                </label>\n              </div>\n              {\"   \"}\n              <div className=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"radioThemeDark\"\n                  name=\"radioTheme\"\n                  value={layoutTheme.DARKMODE}\n                  className=\"form-check-input\"\n                  checked={layoutMode === layoutTheme.DARKMODE}\n                  onChange={e => {\n                    onChangeMode(e.target.value);\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"radioThemeDark\">\n                  Dark\n                </label>\n              </div>\n\n              <h6 className=\"mt-4 mb-3\">Layout Width</h6>\n              <div className=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"radioFluid\"\n                  name=\"radioWidth\"\n                  value={layoutWidthTypes.FLUID}\n                  className=\"form-check-input\"\n                  checked={layoutWidth === layoutWidthTypes.FLUID}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      dispatch(changeLayoutWidth(e.target.value));\n                    }\n                  }}\n                />\n                <label htmlFor=\"radioFluid\" className=\"form-check-label\">\n                  Fluid\n                </label>\n              </div>\n              {\"   \"}\n              <div className=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"radioBoxed\"\n                  name=\"radioWidth\"\n                  value={layoutWidthTypes.BOXED}\n                  className=\"form-check-input\"\n                  checked={layoutWidth === layoutWidthTypes.BOXED}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      dispatch(changeLayoutWidth(e.target.value));\n                    }\n                  }}\n                />\n                <label htmlFor=\"radioBoxed\" className=\"form-check-label\">\n                  Boxed\n                </label>\n              </div>\n              <h6 className=\"mt-4 mb-3\">Layout Position</h6>\n              <div className=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"layout-position-fixed\"\n                  name=\"layout-position\"\n                  value={layoutPositions.SCROLLABLE_FALSE}\n                  className=\"form-check-input\"\n                  checked={layoutPosition === layoutPositions.SCROLLABLE_FALSE}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      dispatch(changeLayoutPosition(e.target.value));\n                    }\n                  }}\n                />\n                <label\n                  className=\"form-check-label\"\n                  htmlFor=\"layout-position-fixed\"\n                >\n                  Fixed\n                </label>\n              </div>\n\n              <div className=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"layout-position-scrollable\"\n                  name=\"layout-position\"\n                  value={layoutPositions.SCROLLABLE_TRUE}\n                  className=\"form-check-input\"\n                  checked={layoutPosition === layoutPositions.SCROLLABLE_TRUE}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      dispatch(changeLayoutPosition(e.target.value));\n                    }\n                  }}\n                />\n                <label\n                  className=\"form-check-label\"\n                  htmlFor=\"layout-position-scrollable\"\n                >\n                  Scrollable\n                </label>\n              </div>\n\n              <h6 className=\"mt-4 mb-3\">Topbar Color</h6>\n\n              <div className=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"topbar-color-light\"\n                  name=\"topbar-color\"\n                  value={topBarThemeTypes.LIGHT}\n                  className=\"form-check-input\"\n                  checked={topbarTheme === topBarThemeTypes.LIGHT}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      dispatch(changeTopbarTheme(e.target.value));\n                    }\n                  }}\n                />\n                <label\n                  className=\"form-check-label\"\n                  htmlFor=\"topbar-color-light\"\n                >\n                  Light\n                </label>\n              </div>\n              <div className=\"form-check form-check-inline\">\n                <input\n                  type=\"radio\"\n                  id=\"topbar-color-dark\"\n                  name=\"topbar-color\"\n                  value={topBarThemeTypes.DARK}\n                  className=\"form-check-input\"\n                  checked={topbarTheme === topBarThemeTypes.DARK}\n                  onChange={e => {\n                    if (e.target.checked) {\n                      dispatch(changeTopbarTheme(e.target.value));\n                    }\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"topbar-color-dark\">\n                  Dark\n                </label>\n              </div>\n              {layoutType === \"vertical\" ? (\n                <React.Fragment>\n                  <h6 className=\"mt-4 mb-3 sidebar-setting\">Sidebar Size</h6>\n\n                  <div className=\"form-check sidebar-setting\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"sidebar-size\"\n                      id=\"sidebar-size-default\"\n                      value={leftSidebarTypes.DEFAULT}\n                      checked={leftSideBarType === leftSidebarTypes.DEFAULT}\n                      onChange={e => {\n                        if (e.target.checked) {\n                          dispatch(changeSidebarType(e.target.value));\n                        }\n                      }}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor=\"sidebar-size-default\"\n                    >\n                      Default\n                    </label>\n                  </div>\n                  <div className=\"form-check sidebar-setting\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"sidebar-size\"\n                      id=\"sidebar-size-compact\"\n                      value={leftSidebarTypes.COMPACT}\n                      checked={leftSideBarType === leftSidebarTypes.COMPACT}\n                      onChange={e => {\n                        if (e.target.checked) {\n                          dispatch(changeSidebarType(e.target.value));\n                        }\n                      }}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor=\"sidebar-size-compact\"\n                    >\n                      Compact\n                    </label>\n                  </div>\n                  <div className=\"form-check sidebar-setting\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"sidebar-size\"\n                      id=\"sidebar-size-small\"\n                      value={leftSidebarTypes.ICON}\n                      checked={leftSideBarType === leftSidebarTypes.ICON}\n                      onChange={e => {\n                        if (e.target.checked) {\n                          dispatch(changeSidebarType(e.target.value));\n                        }\n                      }}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor=\"sidebar-size-small\"\n                    >\n                      Small (Icon View)\n                    </label>\n                  </div>\n                  <h6 className=\"mt-4 mb-3 sidebar-setting\">Sidebar Color</h6>\n\n                  <div className=\"form-check sidebar-setting\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"sidebar-color\"\n                      id=\"sidebar-color-light\"\n                      value={leftSideBarThemeTypes.LIGHT}\n                      checked={leftSideBarTheme === leftSideBarThemeTypes.LIGHT}\n                      onChange={e => {\n                        if (e.target.checked) {\n                          dispatch(changeSidebarTheme(e.target.value));\n                        }\n                      }}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor=\"sidebar-color-light\"\n                    >\n                      Light\n                    </label>\n                  </div>\n                  <div className=\"form-check sidebar-setting\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"sidebar-color\"\n                      id=\"sidebar-color-dark\"\n                      value={leftSideBarThemeTypes.DARK}\n                      checked={leftSideBarTheme === leftSideBarThemeTypes.DARK}\n                      onChange={e => {\n                        if (e.target.checked) {\n                          dispatch(changeSidebarTheme(e.target.value));\n                        }\n                      }}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor=\"sidebar-color-dark\"\n                    >\n                      Dark\n                    </label>\n                  </div>\n                  <div className=\"form-check sidebar-setting\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"sidebar-color\"\n                      id=\"sidebar-color-brand\"\n                      value={leftSideBarThemeTypes.COLORED}\n                      checked={\n                        leftSideBarTheme === leftSideBarThemeTypes.COLORED\n                      }\n                      onChange={e => {\n                        if (e.target.checked) {\n                          dispatch(changeSidebarTheme(e.target.value));\n                        }\n                      }}\n                    />\n                    <label\n                      className=\"form-check-label\"\n                      htmlFor=\"sidebar-color-brand\"\n                    >\n                      Brand\n                    </label>\n                  </div>\n                </React.Fragment>\n              ) : null}\n            </div>\n          </div>\n        </SimpleBar>\n      </div>\n      <div className=\"rightbar-overlay\" />\n    </React.Fragment>\n  );\n};\n\nexport default RightSidebar;\n"]},"metadata":{},"sourceType":"module"}